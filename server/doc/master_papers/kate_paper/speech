--- слайд 1 ---

Добрый день. Меня зовут Екатерина Тузова. Я представляю еще одну часть проекта под названием "Сервис поиска электронных книг".


--- слайд 2 ---

Я занималась внешней частью веб-сервера, которая обеспечивает верификацию и обновление 
данных, а так же взаимодействие с клиентскими программами и пользователем.

--- слайд 3 ---

План рассказа.
Вначале я подробнее расскажу о протоколе OPDS, о котором упоминал Андрей. А затем перейду к тем задачам, которыми занималась.

--- слайд 4 ---

OPDS(The Open Publication Distribution System) - это достаточно молодой стандарт, который используется для предоставления информации об электронных документах. Этот протокол построен на основе протокола публикации Atom.

Основной идеей существования такого стандарта является возможность единообразной работы с многими серверами. Что, в свою очередь, 


--- слайд 4 ---

Следующая задача, которая возникает перед сервером - это обновление и верификация хранящихся данных.

Верификация нужна потому, что информация, поступающая от «поискового паука» 
(crawler) и анализатора (analyzer) зачастую бывает весьма сомнительного качества.
Это происходит из-за того, что иногда «поисковый паук» находит книги, для которых 
анализатор либо не может извлечь информацию об авторе и названии, либо извлекает ее с ошибками.

Так же существует вероятность, что информация об авторе и назва-
нии книги извлечена со станицы с ошибками.
В таком случае необходимо предоставить возможность администратору исправлять её достаточно
простым способом, например, через веб-интерфейс.


Сервер должен предоставлять информацию двумя способами — в
HTML виде для пользователей, желающих использовать веб-browser, и
по протоколу OPDS — для клиентских программ.

--- слайд 4 ---

Решения задачи обновления информации

--- слайд 5 ---

Первая задача связана с тем, что анализатор не всегда может извлечь хоть какую-нибудь 
информацию со страницы. Для книги в базе данных обязательно должно быть указано 
её название. Иногда со страницы, на которой найдена книга невозможно узнать даже это.

В случае, если анализатор не смог определить название полученной от «поискового паука», но найденный файл — в фомате fb2 или epub, в базу данных добавляется ссылка на этот файл, но эта ссылка не привязывается ни к одной книге.

Позже необходимо извлечь максимум доступной информации из самого файла, если это возможно.

ePub и fb2 - это форматы для представления электронных версий книг.

Оба фомата хранят информацию о книге в удобном для автомати-
ческой обработки формате. Оба формата имеют xml-схему, с помощью
которой происходит валидация документа и с помощью которой возможно
написать парсер извлекающий нужную информацию.

Таким образом есть скрипт, который раз в день проходит по базе данных и ищет 
файлы, которые не привязаны к книгам. Скачивает эти файлы и распознает их. Потом 
добавляет в базу.                            
                            
--- слайд 6-7 ---                          

Со страницы можно извлечь мало информации. Зачастую только название и автора.

Хочется иметь возможность предоставлять пользователю больше информации о книге.
Для этого появилась идея определения жанра книги.

Для реализации были использованы техники машинного обучения.

Для реализации определения жанра книги рассматривались многие
возможности машинного обучения, а именно методы обучения с учите-
лем, такие как Байесовский классификатор, деревья решений, нейрон-
ные сети, метод k-средних и пр.


Классификатор, построенный на основе деревьев решений, не поддер-
живает инкрементальное обучение. Так же, для больших наборов данных
дерево может оказаться слишком большим, что существенно замедлит
процесс классификации. Нейронные сети, в свою очередь, поддерживают
инкрементальное обучение, но являются своего рода «черным ящиком».
В реальных сетях имеются сотни нейронов и тысячи синапсов, поэтому
понять как сеть выбрала ответ невозможно, что делает невозможным бо-
лее тонкую ручную настройку классификатора. Основным недостатком
метода k-средних является то, что для прогнозирования ему требуются
все данные, на которых производилось обучение. На это расходуется не
только память, но и время — для выработки каждого прогноза прихо-
дится сравнивать новый образец с каждым из имеющихся, чтобы найти
ближайшие.

В итоге проведенного анализа алгоритмов, для реализации был вы-
бран Байесовский классификатор, как наиболее подходящий для обуче-
ния и опрашивания на больших наборах данных.

Важной особенностью такого классификатора является возможность инкрементного
обучения, т. е. каждый новый предъявленный образец можно использо-
вать для обновления вероятностей без использования старых обучаю-
щих данных. Поддержка инкрементного обучения важна, т. к. это дает
возможность классификатору обучаться на вновь поступающих в базу
данных книгах. Классификатор должен обновляться быстро и без до-
полнительных запросов к базе данных о книгах, на которых был обучен.
Ещё одно достоинство наивного Байесовского классификатора — отно-
сительная простота интерпретации того, чему классификатор обучился.
Это позволяет более точно настраивать полученный классификатор, из-
меняя вероятности для некоторых признаков.

Для определения вероятности для всего документа был выбран метода Фишера [12]. 
В отличие от наивной байесовсой фильтрации, когда для вычисления вероятности
всего документа перемножаются вероятности отдельных признаков, по
методу Фишера вычисляется вероятность отнесения к той или иной кате-
гории для каждого признака документа, после чего эти вероятности ком-
бинируются и проверяется, насколько получившееся множество похоже
на случайное.

В случае классификации книг, в качестве входа использовались на-
звание книги и ее аннотация. В том случае, если описание еще не храни-
лось базе данных происходил поиск описания на Amazone

Перед первым проходом классификатора, определяющего жанры книг
запускается скрипт, собирающий дополнительную информацию об авто-
рах. Такой информацией являются жанры, в которых пишет автор. По-
иск такого рода информации происходит на внешних ресурсах. 



