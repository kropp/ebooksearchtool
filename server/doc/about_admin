Customizing admin view in django.

В django есть встроенный интерфейс администратора. Этот интерфейс очень удобен, но
подходит для решения не всех задач. 

Первая задача, которую мы решили - отображение полей типа ManyToMany. В 
интерфейсе, предоставляемом django - для отображения таких полей есть несколько 
возможностей:
    - Select
    - Filter horizontal
    - Raw_id

Первые два варианта - загружают список всех возможных выборов целиком, что нам 
не подходит, т.к. загружать список, состоящий из 60 тыс. итемов слишком долго.
Третий вариант уже больше похож  на то, что можно использовать, но у него есть
один недостаток - отображаются в текстовом поле id элементов, связанных с данным.
К несчастью, очень маловероятно, что человеку (администратору) будет удобно 
оперировать в терминах id объектов.

---------------
Задача

Создать удобный виджет для отображения авторов, связанных с конкретной книгой.
Хочется видеть их в формате нескольких checkbox'ов, с возможностью добавлять
новые.
--------------------

При создании интерфейса администратора мы первым делом регистрируем модель. При 
регистрации есть возможность указать форму, которая будет использоваться при
отображении. Так же для поля m2m указываем способ отображения - raw_id.

Далее, создадим свою форму, которая наследуется от forms.ModelForm.
Внутри формы для каждого из полей модели можно специфицировать используемый 
виджет. Для нашего m2m мы создадим собственный виджет. Для того, чтобы сохранить 
нужное поведение мы наследуемся от forms.CheckboxSelectMultiple, 
ManyToManyRawIdWidget. Осталось переопределить метод render, который генерирует 
начинку нашего виджета. Внутри этого метода, которому передаются id - нужно
обратиться к  базе и по id узнать имена авторов. Затем вызвать метод render
от checkbox, которому передать список пар (author_id, author_name).

Теперь мы умеем отображать имеющуюся информацию в удобном нам виде. Но если мы 
попробуем сейчас сохранить нашу книгу - ничего не выйдет. Это произошло от того, 
что внутри стандартного метода save используется метод cleaned_data, который 
извлекает информацию из форм, затем происходит проверка - изменилась ли эта 
информация и сохранение. Метод cleaned_data из checkbox извлекает не только id.
Значит нам нужно руками вытащить id и сохранить в словарь. Теперь наша форма
умеет правильно сохраняться в базу.

Осталось добавить возможность добавления авторов. Это делается уже с помощью 
javascript. 


