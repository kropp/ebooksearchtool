
    * OPDS Catalog Entry Documents SHOULD contain at least one Acqusition Link, an atom:link element with a rel attribute value of 
"http://opds-spec.org/acquisition", 
"http://opds-spec.org/acquisition/buy", 
"http://opds-spec.org/acquisition/borrow", 
"http://opds-spec.org/acquisition/subscribe", 
"http://opds-spec.org/acquisition/sample". 

 MetadataAndLinkRelations   
List of metadata and link relations in OPDS

Like in AtomPub, an entry in an OPDS feed SHOULD NOT be considered to be a full entry. Partial entries, MAY have a full entry identified by link@rel="alternate" and the "application/atom+xml;type=entry" mimetype.
Metadata

Metadata in OPDS can be:

    * required in the partial entry
    * allowed in the partial entry, and MUST be in the partial entry if they're used
    * strictly allowed in the full entry 

If a property is in the partial entry, it MUST be in the full entry too.
Required in partial entry

    * atom:title
    * atom:author
    * atom:id
    * atom:updated (Corresponds to the latest update of the Atom entry, NOT the publication)
    * atom:link with an acquisition link relation 

If present, must be in partial entry

    * atom:summary
    * atom:category (Should use a scheme and a label)
    * atom:rights
    * dcterms:language
    * dcterms:publisher
    * dcterms:issued (publicaton date)
    * prism:issue
    * prism:volume
    * opds:price with three-letter ISO 4217 currencycode attribute
    * opds:paymentgateway (e.g. https://www.paypal.com/us/ or http://checkout.google.com )
    * dc:identifier with ISBN (e.g. <dc:identifier>urn:isbn:9780596806712</dc:identifier>)
    * dcterms:SizeOrDuration with Number of Pages, if available. 

Full entry

All of the elements above and anything else. Anything in the partial entry MUST be in the full entry too (aside from the link to the full entry). It is recommended that OPDS feed publishers use the dcterms: namespace for additional metadata.
Link Relations

Aside from common link relations (as defined in the Link Header draft rather than the current IANA link registry), several OPDS-specific link relations are created.
Feed-level (defined in the OPDS specs)

    * http://opds-spec.org/bookshelf
    * http://opds-spec.org/subscriptions
    * http://opds-spec.org/crawlable (a non-hierarchical feed paginated with many entries, easy for crawlers to consume) 

Sorting publications

    * http://opds-spec.org/sort/new
    * http://opds-spec.org/sort/popular
    * http://opds-spec.org/sort/featured 

Feed-level (from the link header draft)

    * search (not actually defined in the draft, which is something that we should consider)
    * next (pagination)
    * previous (pagination)
    * first (pagination)
    * last (pagination)
    * start (points to the main OPDS catalog)
    * alternate
    * self
    * related (best way to suggest related OPDS collection feeds. For example while browsing new release in romance, a related link could suggest the most popular publications in romance)
    * help 

Entry-level (defined in the OPDS specs)

Acquisition Links

    * http://opds-spec.org/acquisition
    * http://opds-spec.org/acquisition/buy
    * http://opds-spec.org/acquisition/borrow
    * http://opds-spec.org/acquisition/subscribe
    * http://opds-spec.org/acquisition/sample 

Other

    * http://opds-spec.org/cover
    * http://opds-spec.org/thumbnail 

Entry-level (from the link header draft)

    * alternate
    * related
    * copyright
    * license
    * replies (for comments) 


Atom-specification

3.1.1.2. HTML


   Example atom:title with HTML content:

   ...
   <title type="html">
     Less: &lt;em> &amp;lt; &lt;/em>
   </title>
   ...

   If the value of "type" is "html", the content of the Text construct
   MUST NOT contain child elements and SHOULD be suitable for handling
   as HTML [HTML].  Any markup within MUST be escaped; for example,
   "<br>" as "&lt;br>".  HTML markup within SHOULD be such that it could
   validly appear directly within an HTML <DIV> element, after
   unescaping.  Atom Processors that display such content MAY use that
   markup to aid in its display.



3.1.1.3. XHTML


   Example atom:title with XHTML content:

   ...
   <title type="xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml">
     <xhtml:div>
       Less: <xhtml:em> &lt; </xhtml:em>
     </xhtml:div>
   </title>
   ...

   If the value of "type" is "xhtml", the content of the Text construct
   MUST be a single XHTML div element [XHTML] and SHOULD be suitable for
   handling as XHTML.  The XHTML div element itself MUST NOT be
   considered part of the content.  Atom Processors that display the
   content MAY use the markup to aid in displaying it.  The escaped
   versions of characters such as "&" and ">" represent those
   characters, not markup.


   Examples of valid XHTML content:

   ...
   <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
         This is <b>XHTML</b> content.
      </div>
   </summary>
   ...
   <summary type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml">
         This is <xhtml:b>XHTML</xhtml:b> content.
      </xhtml:div>
   </summary>
   ...

   The following example assumes that the XHTML namespace has been bound
   to the "xh" prefix earlier in the document:

   ...
   <summary type="xhtml">
      <xh:div>
         This is <xh:b>XHTML</xh:b> content.
      </xh:div>
   </summary>
   ...


---------------------------------
Feed

atomFeed =
      element atom:feed {
         atomCommonAttributes,
         (atomAuthor*
          & atomCategory*
          & atomContributor*
          & atomGenerator?
          & atomIcon?
          & atomId
          & atomLink*
          & atomLogo?
          & atomRights?
          & atomSubtitle?
          & atomTitle
          & atomUpdated
          & extensionElement*),
         atomEntry*
      }

-----------------------------
