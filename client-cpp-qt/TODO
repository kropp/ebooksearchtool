Что есть:
	есть оконная программка, которая умеет скачивать файл по тому адресу, который вводит пользователь, тут же парсит скачанный файл (полагая, что формат atom), вытягивает оттуда название книг и их авторов и выводит результат в поле для текста.

Планы:
	на ближайшее время:

		косметические:
		1. Добавить одно поле для более удобного поиска(сразу вводишь то, что хочешь найти).
		2. Возможность настроить proxy, когда программа уже работает.
		
		посерьезнее:
		3.a Катя, Андрей, OPDS -> поля класса Book.
		3.b Реализация модели. Предположительно будет(первые соображения):
			класс Book, поля которого соответствуют всей информации, получаемой с сервера (название, автор, аннотация, ссылки...);
			набор предикатов для Book, в соответствии с которыми пользователь может искать книги в той выборке, которую вернул сервер;
			класс Library, хранящий множество всех книг и реализующий необходимые методы для выборки книг по предикатам.
		4. парсер кладет данные в модель.	
		5. применить паттерн декоратор для порождения новых моделей (поиск в найденном), отвечающих определенному условию. 	
			
	на потом:
		визуальное представление:
			- реализовать абстрактный класс compositor и нескольких наследников, которые отвечают за визуальное расположение книг. И класс, который умеет показывать информацию об одной книге (абстрактный интерфейс и наследники, так как книгу можно рисовать по-разному: просто список названий и авторов; обложка, при наведении мышкой на которую всплывает дополнительная информация...)
		логика:
			- когда надо будет обрабатывать большие файлы - возможно реализовать поток(как у Абельсона и Сассмана). Пока не требуется ничего не делаем. Не создавать сразу модель для всех данных, а создавать и обрабатывать ее на лету, по требованию.
			- возможность отката - хранить 10 последних вариантов модели.
			- ? возможность выводить в книги алфавитном порядке по автору, по названию
		
Надо исправить:
		отделить работу с сетью от окошка.
