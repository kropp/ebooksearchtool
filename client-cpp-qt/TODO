Что есть:
	есть оконная программка, содержащая строку для поиска. 
	Полностью реализован самый простой usecase: 
		1.Пользователь выбирает вид поиска: по автору, по названию, общий. Набирает в строке поиска одно или несколько слов. 
		2. Ему выдается список книг по этому запросу. Виджет для каждой книги.
		3. Виджет отображает обложку, название, автора, начало аннотации(можно просмотреть продолжение аннотации, нажав на ...). В виджете также есть кнопки: удалить, в библиотеку и читать, - и check box. 
		4. При нажатии на кнопку "удалить", виджет исчезает.
		5. При нажатии на кнопку "читать", скачивается файл в формате pdf, открывается с помощью envice.

	модель данных полная(почти - пока не включает price), соответствующая стандарту OPDS. 

View - для каждой книги создает виджет. Просто помещает виджеты в вертикальный Layout.	


Планы:
---------------упорядоченные------------------------------------
[17.02] - [22.02] полная модель, протестированный парсер
[22.02] - [28.02] отладка того, что уже реализовано. Так, чтобы все работало как ожидается.
[28.02] - [07.03] докачка книг, сортировка, группировка, откат
[10.03] - [17.03] просмотр каталогов, библиотека
[17.03] - [30.03] отладка, возможность работы с несколькими серверами одновременно

продумать установку программы, кэширование
usability тестирование

ИТОГО: к концу марта базовая функциональность клиента должна быть завершена

+ [17.02] - parser: уметь брать html-содержимое тега
        1. QXmlInputSource - расширить - + getData(offsetFrom, offsetTo) - неуспешно,
         поскольку QXmlInputSource выдает кусочки документа
        2. старый вариант      - DONE 
+- [17.02]- максимально полная модель данных
      price (bookserver.archive - for testing)
+ [18.02] - описание стандарта atom  www.w3.org/2005/Atom - прочитать --> перечень тегов, их возможное содержимое 

+- [18.02] - OPDS - прочитать описание стандарта  --> перечень тегов, их возможное содержимое
+ [20.02] - в gui добавить возможность работы с разными серверами 
+ [20.02] - в gui добавить возможность просмотреть полное описание книги (диалог, отображающий все поля данных) 


[18.02]- запросить с каждого из известных серверов(ссылки из wiki) opds-файлы, на них протестировать парсер вручную opds_to_opds 
   + feedbooks 
   + bookserver
   + manybooks
   + smashwords
        link без атрибута rel, для скачивания нужна авторизация
        <link type="application/epub+zip" href="http://www.smashwords.com/books/download/2052/8/latest/0/0/breaking-the-addiction-free-sample.epub?username=&amp;password="/>
    такую ссылку я в модель не записываю

    shucang
    серверы, представленые в каталоге lexycle
        - 
[18.02] - opensearch - прочитать описание - в чем заключается расширенный поиск, и должен ли
любой сервер (с которыми мы собираемся работать) его поддерживать
[20.02] указывать в opds writer верный формат для content(xhtml, html, text)
[20.02] сохранение сервера в настройках, отладить работу с другими серверами
    -   обработка ошибок парсинга XML
до - [22.02]    
    составить полное техническое задание к программе. 
        - какие функции будут возможны - какая сортировка.
        - как все это точно будет выглядеть.
        - как получать(как это будет выглядеть) полную информацию о книге.
        (гиперссылка или диалог или отъезжающий вниз widget) 
        - как будет выглядеть просмотр каталогов

[22.02] - после
        - отладить так, чтобы хорошо работало то, что есть.
    Все недочеты, мелкие баги - подчистить
        - все кнопки для помеченных книг работают - удалить, в библиотеку, скачать.
        - установить политику изменения размеров для View, чтобы при добавлении новых книг Layout расширялся.
        - установить политику изменения размеров для book widget - чтобы растягивался на всю ширину окна, в высоту подстраивался под размер текстового содержимого. 
        - bug View: если первый запрос не дал результата - дальнейшие не отображаются 

        - status bar - searching - указывать не только opensearch schema, 
        но и сервер.
        - found иногда 0 показывает - если не было этих данных в xml. 
        - progress bar - устранить bug при закачке картинок
        - обратить внимание на то что в ссылках могут быть как абсолютные, так и относительные пути
        - расширенный поиск
        - обработать ошибки http - соединения

[28.02] - возможность докачать книги далее
        - придумать, где хранить общее число найденных книг и ссылку на следующую страницу
     
        - добавить к Автору поле, по которому сортировать

        - Реализовать библиотеку
            проверять валидность локальных ссылок
            при сериализации(и в модель) записывать дополнительно локальные ссылки на файлы с книгой, обложку

        - в меню добавить диалог format - reader
            откат, сортировка, группировка

[15.03]- способ задать абсолютный путь до .config файла;
        настройки по-умолчанию - в отдельном файле

------------------не упорядоченные----------------------------
    посмотреть уже реализованные OPDS-клиенты:
        OLPS "Get IA Books" Activity
        Lbis
        archive.org HTML OPDS client
(information source http://code.google.com/p/openpub/wiki/SearchScenarios)

    возможность осуществить скачивание/чтение любого доступного формата книги из окошка про книгу

     атрибуты Main Window реализованы и работают
      - menu
      - toolbar
      - status bar
      - progress bar
   
   -   закачка файлов по умолчанию в конкретную папку 
    - расширенный поиск
	- применить паттерн декоратор для порождения новых моделей (поиск в найденном), отвечающих определенному условию. 
	- для View пользоваться QListView.
	- сортировка результатов.
    - подбор иконок в одном стиле
    -  новая функциональность - просмотр каталогов

   - сообщения об ошибках (http - connection, parsing opds)
   
   НЕ получается:
     - срабатывание кнопки "поиск" при нажатии "enter" (путем установки setDefault)
    
	- возможность отката - хранить 10 последних вариантов модели.
	- возможность выводить в книги алфавитном порядке по автору, по названию
    - проверка на граничные случаи(ввода данных и др)
    - проверка - введенных значений - proxy, port - вывод предупреждения 
    - работа одновременно с несколькими серверами
    - возможность указать в настройках, скачивать обложки или нет
    - возможность остановить любую закачку


Надо исправить:
	надо, чтобы программа чистила после себя скачанные файлы (обложки).
	
Замечания:
    1) во View хотела использовать Layout как контейнер и отдельно указатели на BookWidget не хранить. Получились некоторые проблемы при обращении к BookWidget через Layout. Теперь храню вектор из BookWidget во View. Хотелось бы проблемы решить без добавление вектора.
    2) механизм передачи сигнала от кнопки удалить до самого удаления во View. Взглянуть критически.
    3) придумать нормальное название для виджета с выпадающим-скрывающимся текстом. (для доп информации по книге)

useful links:
	free icons: http://www.iconfinder.net/search
